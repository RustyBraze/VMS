{% extends 'pages/install/base_template.html.twig' %}

{% block content %}

    <p>Create now an administrative account.</p>
    <p>This is the main administrative account to login, even if the IDP or external authentication is not working.</p>
    <p><strong>It is only valid for the admin panel</strong></p>

    <form method="post" class="row g-1">
        <div class="col-md-12">
            <label class="form-label">Username</label>
            <input type="text" name="username" class="form-control" required>
        </div>

        <div class="col-md">
            <label class="form-label">Password</label>
            <input type="password" name="password" class="form-control" id="password" oninput="validatePassword(this.value)" required>
        </div>


        <div class="form-group">
            <ul>
                <li id="minLength"><i class="bi bi-exclamation-triangle-fill"></i>
                    Minimum 8 characters
                </li>
                <li id="uppercase"><i class="bi bi-exclamation-triangle-fill"></i>
                    At least one uppercase letter
                </li>
                <li id="lowercase"><i class="bi bi-exclamation-triangle-fill"></i>
                    At least one lowercase letter
                </li>
                <li id="symbol"><i class="bi bi-exclamation-triangle-fill"></i>
                    At least one symbol (@$!%*?&)
                </li>
            </ul>
        </div>
        <span id="errorMessage" class="font-weight-bold text-danger"></span>
        <span id="errorMessage2" class="font-weight-bold text-danger"></span>

        <div class="col-md">
            <label class="form-label">Repeat Password</label>
            <input type="password" name="password2" class="form-control" id="password2" required>
        </div>

        <p></p>
        <button type="submit" class="btn btn-primary">Next</button>

    </form>

    <script>
        function validatePassword(password) {
            const strongPasswordRegex =
                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            const errorMessage = document.getElementById('errorMessage');

            // Update each condition's status
            document.getElementById('minLength').innerHTML =
                password.length >= 8
                    ? '<i class="bi bi-check-circle-fill text-success"></i> Minimum 8 characters'
                    : '<i class="bi bi-exclamation-triangle-fill text-danger"></i> Minimum 8 characters';
            document.getElementById('uppercase').innerHTML =
                /[A-Z]/.test(password)
                    ? '<i class="bi bi-check-circle-fill text-success"></i> At least one uppercase letter'
                    : '<i class="bi bi-exclamation-triangle-fill text-danger"></i> At least one uppercase letter';
            document.getElementById('lowercase').innerHTML =
                /[a-z]/.test(password)
                    ? '<i class="bi bi-check-circle-fill text-success"></i> At least one lowercase letter'
                    : '<i class="bi bi-exclamation-triangle-fill text-danger"></i> At least one lowercase letter';
            document.getElementById('symbol').innerHTML =
                /[@$!%*?&]/.test(password)
                    ? '<i class="bi bi-check-circle-fill text-success"></i> At least one symbol (@$!%*?&)'
                    : '<i class="bi bi-exclamation-triangle-fill text-danger"></i> At least one symbol (@$!%*?&)';

            // Display overall validation message
            if (strongPasswordRegex.test(password)) {
                errorMessage.textContent = 'Password compliant';
                errorMessage.classList.remove('text-danger');
                errorMessage.classList.add('text-success');
                return true; // Password is strong
            } else {
                errorMessage.textContent = 'Password non-compliant';
                errorMessage.classList.remove('text-success');
                errorMessage.classList.add('text-danger');
                return false; // Password is weak
            }
        }

        function checkMatchingPasswords() {
            const password = document.getElementById('password').value;
            const password2 = document.getElementById('password2').value;
            const errorMessage = document.getElementById('errorMessage2');
            const submitButton = document.querySelector('button[type="submit"]');

            if (password === password2) {
                errorMessage.textContent = 'Passwords match';
                errorMessage.classList.remove('text-danger');
                errorMessage.classList.add('text-success');
                return true; // Passwords match
            } else {
                errorMessage.textContent = 'Passwords do not match';
                errorMessage.classList.remove('text-success');
                errorMessage.classList.add('text-danger');
                return false; // Passwords do not match
            }
        }

        function toggleSubmitButton() {
            const passwordIsStrong = validatePassword(document.getElementById('password').value);
            const passwordsMatch = checkMatchingPasswords();
            const submitButton = document.querySelector('button[type="submit"]');

            if (passwordIsStrong && passwordsMatch) {
                submitButton.disabled = false; // Enable the button
            } else {
                submitButton.disabled = true; // Disable the button
            }
        }

        // Attach to events
        document.addEventListener('DOMContentLoaded', function () {
            const passwordInput = document.getElementById('password');
            const password2Input = document.getElementById('password2');
            const submitButton = document.querySelector('button[type="submit"]');

            // Initially disable the button
            submitButton.disabled = true;

            // Listen to input events for password fields
            passwordInput.addEventListener('input', toggleSubmitButton);
            password2Input.addEventListener('input', toggleSubmitButton);
        });
    </script>


{% endblock %}
